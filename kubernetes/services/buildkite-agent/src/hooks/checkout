#!/usr/bin/env bash

# Overrides the default git checkout behavior.
# This hook is meant to replace git protocol with https
# since port 22 - used for ssh - might be blocked.

set -euo pipefail

# change protocol git to https
BUILDKITE_REPO=$(sed "s/:/\//; s/git@/https:\/\/${BITBUCKET_USER}:${BITBUCKET_TOKEN}@/" <<< "$BUILDKITE_REPO")

# Do we need to do a git checkout?
if [[ -d ".git" ]]; then
  git remote set-url origin "$BUILDKITE_REPO"
else
  BUILDKITE_GIT_CLONE_FLAGS=${BUILDKITE_GIT_CLONE_FLAGS:--v}
  git clone "$BUILDKITE_GIT_CLONE_FLAGS" -- "$BUILDKITE_REPO" .
fi

BUILDKITE_GIT_CLEAN_FLAGS=${BUILDKITE_GIT_CLEAN_FLAGS:--fdq}
git clean "$BUILDKITE_GIT_CLEAN_FLAGS"

# If a refspec is provided then use it instead.
# i.e. `refs/not/a/head`
if [[ -n "${BUILDKITE_REFSPEC:-}" ]]; then
  git fetch -v origin "$BUILDKITE_REFSPEC"
  git checkout -f "$BUILDKITE_COMMIT"

# If the commit is "HEAD" then we can't do a commit-specific fetch and will
# need to fetch the remote head and checkout the fetched head explicitly.
elif [[ "$BUILDKITE_COMMIT" == "HEAD" ]]; then
  git fetch -v origin "$BUILDKITE_BRANCH"
  git checkout -f FETCH_HEAD

# Otherwise fetch and checkout the commit directly. Some repositories don't
# support fetching a specific commit so we fall back to fetching all heads
# and tags, hoping that the commit is included.
else

  # By default `git fetch origin` will only fetch tags which are reachable
  # from a fetches branch.
  git fetch -v origin "$BUILDKITE_COMMIT"
  git checkout -f "$BUILDKITE_COMMIT"
fi
